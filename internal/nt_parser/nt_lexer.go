// Code generated from NT.g4 by ANTLR 4.9.2. DO NOT EDIT.

package nt_parser

import (
	"fmt"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = unicode.IsLetter

var serializedLexerAtn = []uint16{
	3, 24715, 42794, 33075, 47597, 16764, 15335, 30598, 22884, 2, 17, 152,
	8, 1, 4, 2, 9, 2, 4, 3, 9, 3, 4, 4, 9, 4, 4, 5, 9, 5, 4, 6, 9, 6, 4, 7,
	9, 7, 4, 8, 9, 8, 4, 9, 9, 9, 4, 10, 9, 10, 4, 11, 9, 11, 4, 12, 9, 12,
	4, 13, 9, 13, 4, 14, 9, 14, 4, 15, 9, 15, 4, 16, 9, 16, 3, 2, 3, 2, 3,
	3, 3, 3, 3, 3, 3, 4, 3, 4, 6, 4, 41, 10, 4, 13, 4, 14, 4, 42, 7, 4, 45,
	10, 4, 12, 4, 14, 4, 48, 11, 4, 3, 5, 3, 5, 6, 5, 52, 10, 5, 13, 5, 14,
	5, 53, 3, 5, 3, 5, 6, 5, 58, 10, 5, 13, 5, 14, 5, 59, 7, 5, 62, 10, 5,
	12, 5, 14, 5, 65, 11, 5, 3, 6, 6, 6, 68, 10, 6, 13, 6, 14, 6, 69, 3, 7,
	3, 7, 3, 7, 3, 7, 7, 7, 76, 10, 7, 12, 7, 14, 7, 79, 11, 7, 3, 7, 3, 7,
	3, 8, 3, 8, 3, 8, 3, 8, 3, 8, 7, 8, 88, 10, 8, 12, 8, 14, 8, 91, 11, 8,
	3, 8, 3, 8, 3, 9, 3, 9, 3, 9, 3, 9, 3, 9, 5, 9, 100, 10, 9, 3, 9, 3, 9,
	7, 9, 104, 10, 9, 12, 9, 14, 9, 107, 11, 9, 3, 9, 5, 9, 110, 10, 9, 3,
	10, 3, 10, 3, 10, 3, 10, 3, 10, 3, 10, 3, 10, 3, 10, 3, 10, 3, 10, 3, 10,
	3, 10, 3, 10, 3, 10, 3, 10, 3, 10, 3, 10, 3, 10, 3, 10, 3, 10, 5, 10, 132,
	10, 10, 3, 11, 3, 11, 3, 11, 3, 12, 5, 12, 138, 10, 12, 3, 13, 3, 13, 5,
	13, 142, 10, 13, 3, 14, 3, 14, 5, 14, 146, 10, 14, 3, 15, 5, 15, 149, 10,
	15, 3, 16, 3, 16, 2, 2, 17, 3, 3, 5, 4, 7, 5, 9, 6, 11, 7, 13, 8, 15, 9,
	17, 10, 19, 11, 21, 12, 23, 13, 25, 14, 27, 15, 29, 16, 31, 17, 3, 2, 13,
	4, 2, 12, 12, 15, 15, 4, 2, 67, 92, 99, 124, 5, 2, 50, 59, 67, 92, 99,
	124, 8, 2, 37, 37, 39, 40, 48, 49, 60, 60, 66, 66, 94, 94, 6, 2, 12, 12,
	15, 15, 36, 36, 94, 94, 3, 2, 50, 59, 10, 2, 36, 36, 41, 41, 94, 94, 100,
	100, 104, 104, 112, 112, 116, 116, 118, 118, 4, 2, 60, 60, 97, 97, 7, 2,
	47, 47, 50, 59, 185, 185, 770, 881, 8257, 8258, 5, 2, 50, 59, 67, 72, 99,
	104, 4, 2, 11, 11, 34, 34, 3, 16, 2, 67, 2, 92, 2, 99, 2, 124, 2, 194,
	2, 216, 2, 218, 2, 248, 2, 250, 2, 769, 2, 882, 2, 895, 2, 897, 2, 8193,
	2, 8206, 2, 8207, 2, 8306, 2, 8593, 2, 11266, 2, 12273, 2, 12291, 2, 55297,
	2, 63746, 2, 64977, 2, 65010, 2, 65535, 2, 2, 3, 1, 16, 170, 2, 3, 3, 2,
	2, 2, 2, 5, 3, 2, 2, 2, 2, 7, 3, 2, 2, 2, 2, 9, 3, 2, 2, 2, 2, 11, 3, 2,
	2, 2, 2, 13, 3, 2, 2, 2, 2, 15, 3, 2, 2, 2, 2, 17, 3, 2, 2, 2, 2, 19, 3,
	2, 2, 2, 2, 21, 3, 2, 2, 2, 2, 23, 3, 2, 2, 2, 2, 25, 3, 2, 2, 2, 2, 27,
	3, 2, 2, 2, 2, 29, 3, 2, 2, 2, 2, 31, 3, 2, 2, 2, 3, 33, 3, 2, 2, 2, 5,
	35, 3, 2, 2, 2, 7, 38, 3, 2, 2, 2, 9, 49, 3, 2, 2, 2, 11, 67, 3, 2, 2,
	2, 13, 71, 3, 2, 2, 2, 15, 82, 3, 2, 2, 2, 17, 94, 3, 2, 2, 2, 19, 131,
	3, 2, 2, 2, 21, 133, 3, 2, 2, 2, 23, 137, 3, 2, 2, 2, 25, 141, 3, 2, 2,
	2, 27, 145, 3, 2, 2, 2, 29, 148, 3, 2, 2, 2, 31, 150, 3, 2, 2, 2, 33, 34,
	7, 48, 2, 2, 34, 4, 3, 2, 2, 2, 35, 36, 7, 96, 2, 2, 36, 37, 7, 96, 2,
	2, 37, 6, 3, 2, 2, 2, 38, 46, 7, 37, 2, 2, 39, 41, 10, 2, 2, 2, 40, 39,
	3, 2, 2, 2, 41, 42, 3, 2, 2, 2, 42, 40, 3, 2, 2, 2, 42, 43, 3, 2, 2, 2,
	43, 45, 3, 2, 2, 2, 44, 40, 3, 2, 2, 2, 45, 48, 3, 2, 2, 2, 46, 44, 3,
	2, 2, 2, 46, 47, 3, 2, 2, 2, 47, 8, 3, 2, 2, 2, 48, 46, 3, 2, 2, 2, 49,
	51, 7, 66, 2, 2, 50, 52, 9, 3, 2, 2, 51, 50, 3, 2, 2, 2, 52, 53, 3, 2,
	2, 2, 53, 51, 3, 2, 2, 2, 53, 54, 3, 2, 2, 2, 54, 63, 3, 2, 2, 2, 55, 57,
	7, 47, 2, 2, 56, 58, 9, 4, 2, 2, 57, 56, 3, 2, 2, 2, 58, 59, 3, 2, 2, 2,
	59, 57, 3, 2, 2, 2, 59, 60, 3, 2, 2, 2, 60, 62, 3, 2, 2, 2, 61, 55, 3,
	2, 2, 2, 62, 65, 3, 2, 2, 2, 63, 61, 3, 2, 2, 2, 63, 64, 3, 2, 2, 2, 64,
	10, 3, 2, 2, 2, 65, 63, 3, 2, 2, 2, 66, 68, 9, 2, 2, 2, 67, 66, 3, 2, 2,
	2, 68, 69, 3, 2, 2, 2, 69, 67, 3, 2, 2, 2, 69, 70, 3, 2, 2, 2, 70, 12,
	3, 2, 2, 2, 71, 77, 7, 62, 2, 2, 72, 76, 5, 27, 14, 2, 73, 76, 9, 5, 2,
	2, 74, 76, 5, 19, 10, 2, 75, 72, 3, 2, 2, 2, 75, 73, 3, 2, 2, 2, 75, 74,
	3, 2, 2, 2, 76, 79, 3, 2, 2, 2, 77, 75, 3, 2, 2, 2, 77, 78, 3, 2, 2, 2,
	78, 80, 3, 2, 2, 2, 79, 77, 3, 2, 2, 2, 80, 81, 7, 64, 2, 2, 81, 14, 3,
	2, 2, 2, 82, 89, 7, 36, 2, 2, 83, 88, 10, 6, 2, 2, 84, 88, 7, 41, 2, 2,
	85, 86, 7, 94, 2, 2, 86, 88, 7, 36, 2, 2, 87, 83, 3, 2, 2, 2, 87, 84, 3,
	2, 2, 2, 87, 85, 3, 2, 2, 2, 88, 91, 3, 2, 2, 2, 89, 87, 3, 2, 2, 2, 89,
	90, 3, 2, 2, 2, 90, 92, 3, 2, 2, 2, 91, 89, 3, 2, 2, 2, 92, 93, 7, 36,
	2, 2, 93, 16, 3, 2, 2, 2, 94, 95, 7, 97, 2, 2, 95, 96, 7, 60, 2, 2, 96,
	99, 3, 2, 2, 2, 97, 100, 5, 25, 13, 2, 98, 100, 9, 7, 2, 2, 99, 97, 3,
	2, 2, 2, 99, 98, 3, 2, 2, 2, 100, 109, 3, 2, 2, 2, 101, 104, 5, 27, 14,
	2, 102, 104, 7, 48, 2, 2, 103, 101, 3, 2, 2, 2, 103, 102, 3, 2, 2, 2, 104,
	107, 3, 2, 2, 2, 105, 103, 3, 2, 2, 2, 105, 106, 3, 2, 2, 2, 106, 108,
	3, 2, 2, 2, 107, 105, 3, 2, 2, 2, 108, 110, 5, 27, 14, 2, 109, 105, 3,
	2, 2, 2, 109, 110, 3, 2, 2, 2, 110, 18, 3, 2, 2, 2, 111, 112, 7, 94, 2,
	2, 112, 113, 7, 119, 2, 2, 113, 114, 3, 2, 2, 2, 114, 115, 5, 29, 15, 2,
	115, 116, 5, 29, 15, 2, 116, 117, 5, 29, 15, 2, 117, 118, 5, 29, 15, 2,
	118, 132, 3, 2, 2, 2, 119, 120, 7, 94, 2, 2, 120, 121, 7, 87, 2, 2, 121,
	122, 3, 2, 2, 2, 122, 123, 5, 29, 15, 2, 123, 124, 5, 29, 15, 2, 124, 125,
	5, 29, 15, 2, 125, 126, 5, 29, 15, 2, 126, 127, 5, 29, 15, 2, 127, 128,
	5, 29, 15, 2, 128, 129, 5, 29, 15, 2, 129, 130, 5, 29, 15, 2, 130, 132,
	3, 2, 2, 2, 131, 111, 3, 2, 2, 2, 131, 119, 3, 2, 2, 2, 132, 20, 3, 2,
	2, 2, 133, 134, 7, 94, 2, 2, 134, 135, 9, 8, 2, 2, 135, 22, 3, 2, 2, 2,
	136, 138, 9, 13, 2, 2, 137, 136, 3, 2, 2, 2, 138, 24, 3, 2, 2, 2, 139,
	142, 5, 23, 12, 2, 140, 142, 9, 9, 2, 2, 141, 139, 3, 2, 2, 2, 141, 140,
	3, 2, 2, 2, 142, 26, 3, 2, 2, 2, 143, 146, 5, 25, 13, 2, 144, 146, 9, 10,
	2, 2, 145, 143, 3, 2, 2, 2, 145, 144, 3, 2, 2, 2, 146, 28, 3, 2, 2, 2,
	147, 149, 9, 11, 2, 2, 148, 147, 3, 2, 2, 2, 149, 30, 3, 2, 2, 2, 150,
	151, 9, 12, 2, 2, 151, 32, 3, 2, 2, 2, 22, 2, 42, 46, 53, 59, 63, 69, 75,
	77, 87, 89, 99, 103, 105, 109, 131, 137, 141, 145, 148, 2,
}

var lexerChannelNames = []string{
	"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
}

var lexerModeNames = []string{
	"DEFAULT_MODE",
}

var lexerLiteralNames = []string{
	"", "'.'", "'^^'",
}

var lexerSymbolicNames = []string{
	"", "", "", "COMMENT", "LANGTAG", "EOL", "IRIREF", "STRING_LITERAL_QUOTE",
	"BLANK_NODE_LABEL", "UCHAR", "ECHAR", "PN_CHARS_BASE", "PN_CHARS_U", "PN_CHARS",
	"HEX", "WS",
}

var lexerRuleNames = []string{
	"T__0", "T__1", "COMMENT", "LANGTAG", "EOL", "IRIREF", "STRING_LITERAL_QUOTE",
	"BLANK_NODE_LABEL", "UCHAR", "ECHAR", "PN_CHARS_BASE", "PN_CHARS_U", "PN_CHARS",
	"HEX", "WS",
}

type NTLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

// NewNTLexer produces a new lexer instance for the optional input antlr.CharStream.
//
// The *NTLexer instance produced may be reused by calling the SetInputStream method.
// The initial lexer configuration is expensive to construct, and the object is not thread-safe;
// however, if used within a Golang sync.Pool, the construction cost amortizes well and the
// objects can be used in a thread-safe manner.
func NewNTLexer(input antlr.CharStream) *NTLexer {
	l := new(NTLexer)
	lexerDeserializer := antlr.NewATNDeserializer(nil)
	lexerAtn := lexerDeserializer.DeserializeFromUInt16(serializedLexerAtn)
	lexerDecisionToDFA := make([]*antlr.DFA, len(lexerAtn.DecisionToState))
	for index, ds := range lexerAtn.DecisionToState {
		lexerDecisionToDFA[index] = antlr.NewDFA(ds, index)
	}
	l.BaseLexer = antlr.NewBaseLexer(input)
	l.Interpreter = antlr.NewLexerATNSimulator(l, lexerAtn, lexerDecisionToDFA, antlr.NewPredictionContextCache())

	l.channelNames = lexerChannelNames
	l.modeNames = lexerModeNames
	l.RuleNames = lexerRuleNames
	l.LiteralNames = lexerLiteralNames
	l.SymbolicNames = lexerSymbolicNames
	l.GrammarFileName = "NT.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// NTLexer tokens.
const (
	NTLexerT__0                 = 1
	NTLexerT__1                 = 2
	NTLexerCOMMENT              = 3
	NTLexerLANGTAG              = 4
	NTLexerEOL                  = 5
	NTLexerIRIREF               = 6
	NTLexerSTRING_LITERAL_QUOTE = 7
	NTLexerBLANK_NODE_LABEL     = 8
	NTLexerUCHAR                = 9
	NTLexerECHAR                = 10
	NTLexerPN_CHARS_BASE        = 11
	NTLexerPN_CHARS_U           = 12
	NTLexerPN_CHARS             = 13
	NTLexerHEX                  = 14
	NTLexerWS                   = 15
)
